@mixin button-variant(
	$background,
	$border,
	$color: color-contrast($background),
	$hover-background: if($color == $color-contrast-light, shade-color($background, $btn-hover-bg-shade-amount), tint-color($background, $btn-hover-bg-tint-amount)),
	$hover-border: if($color == $color-contrast-light, shade-color($border, $btn-hover-border-shade-amount), tint-color($border, $btn-hover-border-tint-amount)),
	$hover-color: color-contrast($hover-background),
	$active-background: if($color == $color-contrast-light, shade-color($background,$btn-active-bg-shade-amount), tint-color($background, $btn-active-bg-tint-amount)),
	$active-border: if($color == $color-contrast-light, shade-color($border, $btn-active-border-shade-amount), tint-color($border, $btn-active-border-tint-amount)),
	$active-color: color-contrast($active-background),
	$disabled-background: $background,
	$disabled-border: $border,
	$disabled-color: color-contrast($disabled-background)
) {
	& > tbody > tr > td {
		@include bg($background);

		> a {
			@include bg($background);
			color: $color;
			border: $btn-border-width solid $border;
		}
	}
}

@mixin button-outline-variant(
	$color,
	$color-hover: color-contrast($color),
	$active-background: $color,
	$active-border: $color,
	$active-color: color-contrast($active-background)
) {
	& > tbody > tr > td {
		background-color: transparent;
		border: $btn-border-width solid $color;

		> a {
			background-color: transparent;
			color: $color;
			border: $btn-border-width solid $color;
		}
	}
}

@mixin button-size($padding-y, $padding-x, $font-size, $border-radius) {
	& > tbody > tr > td {
		@include border-radius($border-radius, 0);

		> a {
			padding: $padding-y $padding-x;
			font-size: $font-size;
			@include border-radius($border-radius, 0);
		}
	}
}
